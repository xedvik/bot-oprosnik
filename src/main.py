"""
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –æ–ø—Ä–æ—Å–æ–≤
"""

import asyncio
import logging
import sys
from telegram.ext import (
    Application, CommandHandler, MessageHandler, 
    ConversationHandler, filters
)

from config import BOT_TOKEN, ADMIN_IDS, SPREADSHEET_ID, setup_logging
from utils.sheets import GoogleSheets
from utils.helpers import setup_commands, is_admin
from models.states import *
from handlers.survey_handlers import SurveyHandler
from handlers.admin_handlers import AdminHandler
from handlers.edit_handlers import EditHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = setup_logging()

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not BOT_TOKEN:
        logger.error("–ù–µ —É–∫–∞–∑–∞–Ω BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        sys.exit(1)
        
    if not SPREADSHEET_ID:
        logger.error("–ù–µ —É–∫–∞–∑–∞–Ω SPREADSHEET_ID –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Sheets
    try:
        sheets = GoogleSheets()
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        admin_ids = sheets.get_admins()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Google Sheets: {e}")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–¥–º–∏–Ω–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
        admin_ids = ADMIN_IDS
        logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–¥–º–∏–Ω–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è: {admin_ids}")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    survey_handler = SurveyHandler(sheets)
    admin_handler = AdminHandler(sheets, application)
    edit_handler = EditHandler(sheets)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
    await setup_commands(application, admin_ids)
    
    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –æ–ø—Ä–æ—Å–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
    survey_states = {
        WAITING_START: [
            MessageHandler(filters.Regex(r"^‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å –æ–ø—Ä–æ—Å$"), survey_handler.begin_survey)
        ],
        CONFIRMING: [
            MessageHandler(filters.Regex(r"^‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å$"), survey_handler.handle_answer),
            MessageHandler(filters.Regex(r"^üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ$"), survey_handler.begin_survey)
        ],
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤
    survey_states.update({
        f"QUESTION_{i}": [MessageHandler(filters.TEXT & ~filters.COMMAND, survey_handler.handle_answer)]
        for i in range(len(survey_handler.questions))
    })
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ–ø—Ä–æ—Å–∞
    survey_conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("start", survey_handler.start),
            MessageHandler(filters.Regex(r"^‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å –æ–ø—Ä–æ—Å$"), survey_handler.begin_survey)
        ],
        states=survey_states,
        fallbacks=[
            CommandHandler("restart", survey_handler.restart)
        ],
        name="survey_conversation"
    )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤
    add_question_conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("add_question", admin_handler.add_question, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            ADDING_QUESTION: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_new_question)
            ],
            CHOOSING_OPTIONS_TYPE: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_options_choice)
            ],
            ADDING_OPTIONS: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_option_input)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", admin_handler.cancel_editing)
        ],
        name="add_question_conversation"
    )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤
    edit_question_conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("edit_question", edit_handler.edit_question, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            CHOOSING_QUESTION: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_question_choice)
            ],
            EDITING_QUESTION: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_edit_menu_choice)
            ],
            EDITING_QUESTION_TEXT: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_question_text_edit)
            ],
            EDITING_OPTIONS: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_options_edit)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", edit_handler.cancel_editing)
        ],
        name="edit_question_conversation"
    )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤
    delete_question_conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("delete_question", edit_handler.delete_question, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            DELETING_QUESTION: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_question_delete)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", edit_handler.cancel_editing)
        ],
        name="delete_question_conversation"
    )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    clear_data_conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("clear_data", admin_handler.clear_data, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            CONFIRMING_CLEAR: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_clear_confirmation)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", admin_handler.cancel_editing)
        ],
        name="clear_data_conversation"
    )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    add_admin_conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("add_admin", admin_handler.add_admin, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            ADDING_ADMIN: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_new_admin)
            ],
            ADDING_ADMIN_NAME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_admin_name)
            ],
            ADDING_ADMIN_DESCRIPTION: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_admin_description)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", admin_handler.cancel_editing)
        ],
        name="add_admin_conversation"
    )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    remove_admin_conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("remove_admin", admin_handler.remove_admin, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            REMOVING_ADMIN: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_admin_remove)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", admin_handler.cancel_editing)
        ],
        name="remove_admin_conversation"
    )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    reset_user_conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("reset_user", admin_handler.reset_user, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            RESETTING_USER: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_reset_user)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", admin_handler.cancel_editing)
        ],
        name="reset_user_conversation"
    )
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application.add_handler(survey_conv_handler)
    application.add_handler(add_question_conv_handler)
    application.add_handler(edit_question_conv_handler)
    application.add_handler(delete_question_conv_handler)
    application.add_handler(clear_data_conv_handler)
    application.add_handler(add_admin_conv_handler)
    application.add_handler(remove_admin_conv_handler)
    application.add_handler(reset_user_conv_handler)
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("restart", survey_handler.restart))
    application.add_handler(CommandHandler("stats", survey_handler.show_statistics, 
                                          filters=filters.User(user_id=admin_ids)))
    application.add_handler(CommandHandler("list_questions", admin_handler.list_questions, 
                                          filters=filters.User(user_id=admin_ids)))
    application.add_handler(CommandHandler("list_admins", admin_handler.list_admins, 
                                          filters=filters.User(user_id=admin_ids)))
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    await application.initialize()
    await application.start()
    await application.updater.start_polling()
    
    # –ñ–¥–µ–º —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    try:
        # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
        await asyncio.Event().wait()
    finally:
        # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
        await application.updater.stop()
        await application.stop()
        await application.shutdown()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1) 