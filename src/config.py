"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
"""

import os
import json
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –í—ã–≤–æ–¥–∏–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
print("–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
print(f"BOT_TOKEN: {'*' * 8 + os.getenv('BOT_TOKEN', '')[-4:] if os.getenv('BOT_TOKEN') else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
print(f"SPREADSHEET_ID: {os.getenv('SPREADSHEET_ID', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
print(f"GOOGLE_CREDENTIALS_FILE: {os.getenv('GOOGLE_CREDENTIALS_FILE', '–ù–µ —É–∫–∞–∑–∞–Ω')}")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_IDS_STR = os.getenv("ADMIN_IDS", "")
ADMIN_IDS = [int(id.strip()) for id in ADMIN_IDS_STR.split(",") if id.strip()]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets
GOOGLE_CREDENTIALS_FILE = os.getenv("GOOGLE_CREDENTIALS_FILE", "/app/credentials.json")
SPREADSHEET_ID = os.getenv("SPREADSHEET_ID")
QUESTIONS_SHEET = os.getenv("QUESTIONS_SHEET", "–í–æ–ø—Ä–æ—Å—ã —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤")
ANSWERS_SHEET = os.getenv("ANSWERS_SHEET", "–û—Ç–≤–µ—Ç—ã")
STATS_SHEET = os.getenv("STATS_SHEET", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
ADMINS_SHEET = os.getenv("ADMINS_SHEET", "–ê–¥–º–∏–Ω—ã")
MESSAGES_SHEET = os.getenv("MESSAGES_SHEET", "–°–æ–æ–±—â–µ–Ω–∏—è")
POSTS_SHEET = os.getenv("POSTS_SHEET", "–ü–æ—Å—Ç—ã")

# –ù–∞–∑–≤–∞–Ω–∏—è –ª–∏—Å—Ç–æ–≤ –≤ Google —Ç–∞–±–ª–∏—Ü–µ
SHEET_NAMES = {
    'questions': QUESTIONS_SHEET,
    'answers': ANSWERS_SHEET,
    'statistics': STATS_SHEET,
    'admins': ADMINS_SHEET,
    'users': os.getenv("USERS_SHEET", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"),
    'messages': MESSAGES_SHEET,
    'posts': POSTS_SHEET
}

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –ª–∏—Å—Ç–æ–≤
SHEET_HEADERS = {
    'questions': ['ID', '–í–æ–ø—Ä–æ—Å', '–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤'],
    'answers': ['ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'ID –≤–æ–ø—Ä–æ—Å–∞', '–û—Ç–≤–µ—Ç', '–î–∞—Ç–∞ –æ—Ç–≤–µ—Ç–∞'],
    'statistics': ['ID –≤–æ–ø—Ä–æ—Å–∞', '–í–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'],
    'admins': ['ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', '–î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è'],
    'users': ['–£–Ω–∏–∫–∞–ª—å–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π ID', 'Telegram ID', 'Username', '–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'],
    'messages': ['–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è', '–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è', '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ'],
    'posts': ['ID', '–ù–∞–∑–≤–∞–Ω–∏–µ', '–¢–µ–∫—Å—Ç', '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–ö–Ω–æ–ø–∫–∞ (—Ç–µ–∫—Å—Ç)', '–ö–Ω–æ–ø–∫–∞ (—Å—Å—ã–ª–∫–∞)', '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è', '–°–æ–∑–¥–∞–ª']
}

# –¢–∏–ø—ã —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
MESSAGE_TYPES = {
    'start': '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
    'finish': '–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ–ø—Ä–æ—Å–∞',
    'event_info': '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏'
}

# –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
DEFAULT_MESSAGES = {
    'start': '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}! üëã\n\n–ü—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –î–û–î–µ –ü–∞—Ä—Ç–∏–∏ –ù–æ–≤—ã–µ –õ—é–¥–∏.\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.',
    'finish': '–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏! üéâ\n\n–ë—É–¥–µ–º –∂–¥–∞—Ç—å –≤–∞—Å 5 –∞–ø—Ä–µ–ª—è –≤ 12:00 –ø–æ –∞–¥—Ä–µ—Å—É: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—É—à–∫–∏–Ω–∞, –¥. 1\n\n–î–æ –≤—Å—Ç—Ä–µ—á–∏! üëã',
    'event_info': '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏:\n\n–î–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π –ü–∞—Ä—Ç–∏–∏ –ù–æ–≤—ã–µ –õ—é–¥–∏ —Å–æ—Å—Ç–æ–∏—Ç—Å—è 5 –∞–ø—Ä–µ–ª—è –≤ 12:00 –ø–æ –∞–¥—Ä–µ—Å—É: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—É—à–∫–∏–Ω–∞, –¥. 1.\n\n–í –ø—Ä–æ–≥—Ä–∞–º–º–µ:\n- –í—Å—Ç—Ä–µ—á–∞ —Å –ª–∏–¥–µ—Ä–∞–º–∏ –ø–∞—Ä—Ç–∏–∏\n- –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã\n- –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –¥–∏—Å–∫—É—Å—Å–∏–∏\n- –§—É—Ä—à–µ—Ç\n\n–ü—Ä–∏—Ö–æ–¥–∏—Ç–µ, –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! üéØ'
}

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø–æ—Å—Ç–æ–≤ (–≤ –±–∞–π—Ç–∞—Ö)
MAX_IMAGE_SIZE = 5 * 1024 * 1024  # 5 –ú–ë

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if not SPREADSHEET_ID:
    print("–í–ù–ò–ú–ê–ù–ò–ï: SPREADSHEET_ID –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    print("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π:", repr(os.getenv("SPREADSHEET_ID")))
    print("–¢–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π:", type(os.getenv("SPREADSHEET_ID")))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
LOG_LEVEL_STR = os.getenv("LOG_LEVEL", "INFO")
LOG_FILE = os.getenv("LOG_FILE", "/app/logs/bot.log")
LOG_DATE_FORMAT = "%Y-%m-%d %H:%M:%S"

# –¢–µ–ø–µ—Ä—å –ø–æ–¥–∫–ª—é—á–∞–µ–º utils.logger –ø–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç
from utils.logger import get_logger, setup_logging, DEBUG, INFO, WARNING

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
LOG_LEVEL = INFO  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é INFO
if LOG_LEVEL_STR == "DEBUG":
    LOG_LEVEL = DEBUG
elif LOG_LEVEL_STR == "WARNING":
    LOG_LEVEL = WARNING

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —É—Ä–æ–≤–Ω–µ–π –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥—É–ª–µ–π
MODULE_LOG_LEVELS = {
    'utils.sheets': os.getenv("SHEETS_LOG_LEVEL", "INFO"),
    'utils.questions_cache': os.getenv("CACHE_LOG_LEVEL", "INFO"),
    'handlers.base_handler': os.getenv("HANDLER_LOG_LEVEL", "INFO"),
    'httpx': "WARNING",
    'telegram': "INFO",
    'apscheduler': "INFO",
    'gspread': "WARNING"
}

def configure_logging():
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã —Å AppLogger.
    """
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    log_dir = os.path.dirname(LOG_FILE)
    if log_dir and not os.path.exists(log_dir):
        os.makedirs(log_dir)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    setup_logging(
        level=LOG_LEVEL,
        log_file=LOG_FILE,
        date_format=LOG_DATE_FORMAT
    )
    
    # –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–æ–≤–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞
    app_logger = get_logger()
    app_logger.data_processing("–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ", "–Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ", details={"action": "config_init"})
    
    # –õ–æ–≥–∏—Ä—É–µ–º –≤–∞–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    app_logger.data_processing(
        "–ü—Ä–æ–≤–µ—Ä–∫–∞", 
        "–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è", 
        details={
            "BOT_TOKEN": '–£–∫–∞–∑–∞–Ω' if BOT_TOKEN else '–ù–µ —É–∫–∞–∑–∞–Ω',
            "SPREADSHEET_ID": SPREADSHEET_ID or '–ù–µ —É–∫–∞–∑–∞–Ω',
            "GOOGLE_CREDENTIALS_FILE": GOOGLE_CREDENTIALS_FILE,
            "action": "env_variables"
        }
    )
    
    return app_logger


