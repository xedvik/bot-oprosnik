"""
–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–∏–∞–ª–æ–≥–æ–≤
"""

from telegram.ext import (
    CommandHandler, MessageHandler as TelegramMessageHandler, 
    ConversationHandler, filters, CallbackQueryHandler
)

from models.states import *
from handlers.survey_handlers import SurveyHandler
from handlers.admin_handlers import AdminHandler
from handlers.edit_handlers import EditHandler
from handlers.message_handlers import MessageHandler as CustomMessageHandler
from handlers.post_handlers import PostHandler
from utils.logger import get_logger

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = get_logger()

def create_survey_handler(survey_handler: SurveyHandler) -> ConversationHandler:
    """–°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –æ–ø—Ä–æ—Å–∞"""
    logger.init("conversation_handlers", "–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ–ø—Ä–æ—Å–∞")
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    survey_states = {}
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞—á–∞–ª–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    survey_states[WAITING_START] = [
        TelegramMessageHandler(filters.Regex(r"^‚ñ∂Ô∏è –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è$"), survey_handler.begin_survey),
    ]
    
    survey_states[CONFIRMING] = [
        TelegramMessageHandler(filters.Regex(r"^‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å$"), survey_handler.handle_answer),
        TelegramMessageHandler(filters.Regex(r"^üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ$"), survey_handler.begin_survey)
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    questions_count = len(survey_handler.questions)
    logger.data_processing("—Å–æ—Å—Ç–æ—è–Ω–∏—è_–æ–ø—Ä–æ—Å–∞", "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤", details={"–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ": questions_count})
    
    for i in range(questions_count):
        # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
        question_state = f"QUESTION_{i}"
        survey_states[question_state] = [
            TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, survey_handler.handle_answer)
        ]
        
        # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
        sub_question_state = f"QUESTION_{i}_SUB"
        survey_states[sub_question_state] = [
            TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, survey_handler.handle_answer)
        ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
    survey_states[SUB_OPTIONS] = [
        TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, survey_handler.handle_answer)
    ]
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∏–∞–ª–æ–≥–∞
    return ConversationHandler(
        entry_points=[
            CommandHandler("start", survey_handler.start)
        ],
        states=survey_states,
        fallbacks=[
            CommandHandler("restart", survey_handler.restart)
        ],
        name="survey_conversation"
    )

def create_admin_handlers(admin_handler: AdminHandler, admin_ids: list) -> list:
    """–°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
    logger.init("conversation_handlers", "–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    handlers = []
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞
    add_question_handler = ConversationHandler(
        entry_points=[
            CommandHandler("add_question", admin_handler.add_question, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            ADDING_QUESTION: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_new_question)
            ],
            CHOOSING_OPTIONS_TYPE: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_options_choice)
            ],
            ADDING_OPTIONS: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_option_input)
            ],
            ADDING_NESTED_OPTIONS: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_nested_options)
            ],
            ADDING_FREE_TEXT_PROMPT: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_add_free_text_prompt)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", admin_handler.cancel_editing)
        ],
        name="add_question_conversation"
    )
    handlers.append(add_question_handler)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–±—Ä–æ—Å–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    reset_user_handler = ConversationHandler(
        entry_points=[
            CommandHandler("reset_user", admin_handler.reset_user, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            RESETTING_USER: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_reset_user)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", admin_handler.cancel_editing)
        ],
        name="reset_user_conversation"
    )
    handlers.append(reset_user_handler)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    clear_data_handler = ConversationHandler(
        entry_points=[
            CommandHandler("clear_data", admin_handler.clear_data, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            CONFIRMING_CLEAR: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_clear_confirmation)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", admin_handler.cancel_editing)
        ],
        name="clear_data_conversation"
    )
    handlers.append(clear_data_handler)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    add_admin_handler = ConversationHandler(
        entry_points=[
            CommandHandler("add_admin", admin_handler.add_admin, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            ADDING_ADMIN: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_new_admin)
            ],
            ADDING_ADMIN_NAME: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_admin_name)
            ],
            ADDING_ADMIN_DESCRIPTION: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_admin_description)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", admin_handler.cancel_editing)
        ],
        name="add_admin_conversation"
    )
    handlers.append(add_admin_handler)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    remove_admin_handler = ConversationHandler(
        entry_points=[
            CommandHandler("remove_admin", admin_handler.remove_admin, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            REMOVING_ADMIN: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_admin_remove)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", admin_handler.cancel_editing)
        ],
        name="remove_admin_conversation"
    )
    handlers.append(remove_admin_handler)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    list_users_handler = ConversationHandler(
        entry_points=[
            CommandHandler("list_users", admin_handler.list_users, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            BROWSING_USERS: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, admin_handler.handle_users_pagination)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", admin_handler.cancel_editing)
        ],
        name="list_users_conversation"
    )
    handlers.append(list_users_handler)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    handlers.extend([
        CommandHandler("list_questions", admin_handler.list_questions, 
                      filters=filters.User(user_id=admin_ids)),
        CommandHandler("list_admins", admin_handler.list_admins, 
                      filters=filters.User(user_id=admin_ids))
    ])
    
    return handlers

def create_edit_handlers(edit_handler: EditHandler, admin_ids: list) -> list:
    """–°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤"""
    logger.init("conversation_handlers", "–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    handlers = []
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞
    edit_question_handler = ConversationHandler(
        entry_points=[
            CommandHandler("edit_question", edit_handler.edit_question, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            CHOOSING_QUESTION: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_question_choice)
            ],
            EDITING_QUESTION: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_edit_menu_choice)
            ],
            EDITING_QUESTION_TEXT: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_question_text_edit)
            ],
            EDITING_OPTIONS: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_options_edit)
            ],
            EDITING_SUB_OPTIONS: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_sub_options_edit)
            ],
            ADDING_SUB_OPTION: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_add_sub_option)
            ],
            REMOVING_SUB_OPTION: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_remove_sub_option)
            ],
            ADDING_FREE_TEXT_PROMPT: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_add_free_text_prompt)
            ],
            SELECTING_OPTION_TO_EDIT: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_option_text_edit)
            ],
            EDITING_OPTION_TEXT: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_option_text_update)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", edit_handler.cancel_editing)
        ],
        name="edit_question_conversation"
    )
    handlers.append(edit_question_handler)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞
    delete_question_handler = ConversationHandler(
        entry_points=[
            CommandHandler("delete_question", edit_handler.delete_question, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            DELETING_QUESTION: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, edit_handler.handle_question_delete)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", edit_handler.cancel_editing)
        ],
        name="delete_question_conversation"
    )
    handlers.append(delete_question_handler)
    
    return handlers

def create_message_handlers(message_handler: CustomMessageHandler, admin_ids: list) -> ConversationHandler:
    """–°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π"""
    logger.init("conversation_handlers", "–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π")
    
    return ConversationHandler(
        entry_points=[
            CommandHandler("messages", message_handler.edit_messages, 
                          filters=filters.User(user_id=admin_ids))
        ],
        states={
            CHOOSING_MESSAGE_TYPE: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, message_handler.choose_message_type)
            ],
            ENTERING_NEW_MESSAGE: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, message_handler.save_new_message)
            ],
            ASKING_ADD_IMAGE: [
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, message_handler.handle_image_option)
            ],
            UPLOADING_MESSAGE_IMAGE: [
                TelegramMessageHandler(filters.PHOTO, message_handler.handle_image_upload),
                TelegramMessageHandler(filters.TEXT & ~filters.COMMAND, message_handler.handle_image_upload)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", message_handler.cancel_editing)
        ],
        name="message_editing_conversation"
    )

def create_post_handlers(post_handler: PostHandler, admin_ids: list) -> list:
    """–°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ—Å—Ç–∞–º–∏"""
    logger.init("conversation_handlers", "–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø–æ—Å—Ç–æ–≤")
    
    return [
        ConversationHandler(
            entry_points=[
                CommandHandler("create_post", post_handler.create_post, 
                            filters=filters.User(user_id=admin_ids))
            ],
            states={
                CREATING_POST: [
                    TelegramMessageHandler(
                        filters.TEXT & ~filters.COMMAND & ~filters.Text(["‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.handle_post_text
                    ),
                    TelegramMessageHandler(
                        filters.Text(["‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.cancel_post
                    ),
                ],
                ENTERING_POST_TEXT: [
                    TelegramMessageHandler(
                        filters.TEXT & ~filters.COMMAND & ~filters.Text(["‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.handle_post_content
                    ),
                    TelegramMessageHandler(
                        filters.Text(["‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.cancel_post
                    ),
                ],
                ADDING_POST_IMAGE: [
                    TelegramMessageHandler(
                        filters.TEXT & filters.Text(["üì∑ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", "‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.handle_image_option
                    ),
                    TelegramMessageHandler(
                        (filters.PHOTO | (filters.Document.IMAGE)) & ~filters.COMMAND,
                        post_handler.handle_image_upload
                    ),
                    TelegramMessageHandler(
                        filters.Text(["‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.cancel_post
                    ),
                ],
                ADDING_URL_BUTTON: [
                    TelegramMessageHandler(
                        filters.TEXT & filters.Text(["üîó –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É —Å–æ —Å—Å—ã–ª–∫–æ–π", "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", "‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.handle_button_option
                    ),
                    TelegramMessageHandler(
                        filters.Text(["‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.cancel_post
                    ),
                ],
                ENTERING_BUTTON_TEXT: [
                    TelegramMessageHandler(
                        filters.TEXT & ~filters.COMMAND & ~filters.Text(["‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.handle_button_text
                    ),
                    TelegramMessageHandler(
                        filters.Text(["‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.cancel_post
                    ),
                ],
                ENTERING_BUTTON_URL: [
                    # –î–ª—è –æ–±—ã—á–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞
                    TelegramMessageHandler(
                        ~filters.Text(["‚ùå –û—Ç–º–µ–Ω–∞"]) & ~filters.COMMAND & filters.TEXT,
                        post_handler.handle_button_url,
                        filters.ChatType.PRIVATE & ~filters.UpdateType.EDITED_MESSAGE
                    ),
                    # –î–ª—è –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞
                    TelegramMessageHandler(
                        filters.Text(["‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.cancel_post
                    ),
                ],
                CONFIRMING_POST: [
                    TelegramMessageHandler(
                        filters.TEXT & filters.Text(["‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", "‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.handle_post_confirmation
                    ),
                    TelegramMessageHandler(
                        filters.Text(["‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.cancel_post
                    ),
                ],
                CONFIRMING_SEND_TO_ALL: [
                    TelegramMessageHandler(
                        filters.TEXT & filters.Text(["üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º", "‚è≠Ô∏è –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å", "‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.handle_send_to_all_confirmation
                    ),
                    TelegramMessageHandler(
                        filters.Text(["‚ùå –û—Ç–º–µ–Ω–∞"]),
                        post_handler.cancel_post
                    ),
                ],
                # –ù–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤
                SELECTING_POST_ACTION: [
                    CallbackQueryHandler(post_handler.handle_post_callback)
                ],
                CONFIRMING_POST_DELETE: [
                    CallbackQueryHandler(post_handler.handle_post_callback)
                ],
            },
            fallbacks=[
                CommandHandler('cancel', post_handler.cancel_post),
                TelegramMessageHandler(filters.Text(["‚ùå –û—Ç–º–µ–Ω–∞"]), post_handler.cancel_post),
            ],
            allow_reentry=True,
            name="post_conversation"
        ),
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø–æ—Å—Ç–æ–≤
        CommandHandler('list_posts', post_handler.list_posts, 
                      filters=filters.User(user_id=admin_ids)),
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–º–∏ (–Ω–æ–≤—ã–π)
        CommandHandler('manage_posts', post_handler.manage_posts,
                      filters=filters.User(user_id=admin_ids)),
    ] 